# ----------------------
# Base image: R with version pinned
# ----------------------
FROM rocker/r-ver:4.3.1

LABEL maintainer=""
LABEL description="Slim Bulk RNA-seq pipeline image (no refs baked in)."

# ----------------------
# System dependencies
# ----------------------
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
    wget curl unzip tar gzip bzip2 git \
    build-essential libcurl4-openssl-dev libssl-dev libxml2-dev \
    zlib1g-dev libbz2-dev liblzma-dev libpcre3-dev \
    singularity bowtie2 samtools bcftools vcftools default-jdk python3 python3-pip && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

#RUN apt-get update && apt-get install -y squashfs-tools

# ----------------------
# R packages
# ----------------------
ENV CRAN_REPO=https://packagemanager.posit.co/cran/2024-01-01
RUN R -e "install.packages(c('devtools','zoo','gplots','patchwork','ggplot2','optparse','dplyr','data.table','tidyr','fuzzyjoin','stringr','biomaRt','purrr','jsonlite','edgeR','rmarkdown','knitr'), repos='${CRAN_REPO}')" \
    && rm -rf /tmp/*

# ----------------------
# Install CellNet from tarball (clean after install)
# ----------------------
COPY CellNet_*.tar.gz /tmp/
RUN R -e "install.packages('/tmp/CellNet_*.tar.gz', repos=NULL, type='source')" \
    && rm -f /tmp/CellNet_*.tar.gz

# ----------------------
# Set up workspace
# ----------------------
WORKDIR /workspace
ENV REF_DIR=/ref

# ----------------------
# NOTE: Reference files are NOT copied in, and therefore not automatically present within the image.
# User must mount them:
#   docker run -v /path/to/ref:/ref ...
# ----------------------

# -------------------------------
# Copy in scripts
# -------------------------------
COPY scripts/ /pipeline/

# -------------------------------
# Make scripts executable
# -------------------------------
RUN chmod +x /pipeline/*.sh && chmod +x /pipeline/modules/*/*

# -------------------------------
# Install wdlplay requirements
# -------------------------------
RUN make -C /pipeline/modules/preprocessing/wdlplay install
RUN caper init slurm

# ----------------------
# Environment variables (user MUST override)
# ----------------------
ENV OUTPUT_DIR=""
ENV COSMIC_DIR=""

# ----------------------
# Default entrypoint
# ----------------------
ENTRYPOINT ["bash", "/pipeline/pipeline_runner.sh"]
